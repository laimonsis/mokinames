/* 
#include <stdio.h>
int main() {  
    char c;
    printf("Enter a character: ");
    scanf("%c", &c);  
    
    // %d displays the integer value of a character
    // %c displays the actual character
    printf("ASCII value of %c = %d", c, c);
    
    return 0;
}
*/
******************************************PVZ (C, G, E) 

Pavyzdys kaip value 'C' - 45

--kada %c naudojam kai rodomas (G)

/* <-------------- c++, arrays, function, sum, addition ---------> */
#include <iostream>
#include <math.h>
using namespace std;

int addition (int arr[]) {
    int length = log2(*(&arr + 1) - arr);
    int res = 0;
    for (int n=0; n<length + 1; n++){
        res += arr[n];
    }
    cout << res << endl;
    return 0;
}

int main ()
{
  int array[] = {5, 10, 15,20};
  int array1[] = {10,15,20,25,30};
    
  addition (array);
  addition (array1);

  return 0;
}

/* Load the DLL (if required)
If the plugin is a DLL, you might need to load it dynamically using LoadLibrary and access functions using GetProcAddress.

Example:          */

#include <windows.h>

typedef void (*PluginFunction)();

int main() {
    HMODULE hModule = LoadLibrary("plugin.dll");
    if (hModule) {
        PluginFunction func = (PluginFunction)GetProcAddress(hModule, "FunctionName");
        if (func) {
            func();  // Call the function
        }
        FreeLibrary(hModule);
    } else {
        printf("Failed to load DLL\n");
    }
    return 0;
}
